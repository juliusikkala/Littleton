#version 430

layout(local_size_x=1) in;

layout (std430, binding = 0) buffer input_lobes
{
    readonly vec3 data[MAX_BATCH_SIZE][LOBE_COUNT];
} lobes;

layout (rgba16f, binding = 3) writeonly uniform image3D lobe_output;

uniform int start_index;
uniform int lobe_index;

ivec3 index_position(int i)
{
    ivec3 space = imageSize(lobe_output);
    int layer = space.x * space.y;

    int z = i / layer;
    int layer_index = i % layer;
    int y = layer_index / space.x;
    int x = layer_index % space.x;
    return ivec3(x, y, z);
}

void main()
{
    int i = start_index + int(gl_WorkGroupID.x);
    ivec3 pos = index_position(i);
    imageStore(
        lobe_output,
        pos,
        vec4(lobes.data[gl_WorkGroupID.x][lobe_index], 1)
    );
}

